// HID - Version: Latest 
#include <HID.h>
#include <Keyboard.h>
#include <EasyNeoPixels.h>
/*
rubber duckino
requires pro-micro or leonardo
*/
int pixNum=1;
const int maxVal=128;//115200
int pixPin=15;
int buttonState = 0;

void setup()
{
  pinMode(4, INPUT_PULLUP);
  pinMode(13, OUTPUT);
  setupEasyNeoPixels(pixPin, pixNum);
  Serial.begin(9600);
  Serial.print("hello world");

}

void windows()
{
  // CTRL-ALT-DEL:
  Keyboard.press(KEY_LEFT_CTRL);
  Keyboard.press(KEY_LEFT_ALT);
  Keyboard.press(KEY_DELETE);
  delay(100);
  Keyboard.releaseAll();
  // ALT-l:
  delay(2000);
  Keyboard.press(KEY_LEFT_ALT);
  Keyboard.press('l');
  Keyboard.releaseAll();  
}
void linux()
{
    // CTRL-ALT-DEL:
      Keyboard.press(KEY_LEFT_CTRL);
      Keyboard.press(KEY_LEFT_ALT);
      Keyboard.press(KEY_DELETE);
      delay(1000);
      Keyboard.releaseAll();
      Keyboard.press(KEY_RIGHT_ARROW);
      delay(1000);
      // Enter to confirm logout:
      Keyboard.write(KEY_RETURN);
}

void blink(int R,int G,int B)
{
    digitalWrite(13, HIGH);
     writeEasyNeoPixel(0,R,G,B);
    delay(100); // Delay a little bit to improve simulation performance
    digitalWrite(13, LOW);
     writeEasyNeoPixel(0,0,0,0);
    delay(100); // Delay a little bit to improve simulation performance
}




void loop()
{
    writeEasyNeoPixel(0,100,100,0);
  // read the state of the pushbutton value
  buttonState = digitalRead(4);
  
  // check if pushbutton is pressed.  if it is, the
  // buttonState is HIGH
  if (buttonState == HIGH) {
    blink(100,0,0);
    Keyboard.begin();
    run();
  //  Keyboard.end();
    delay(100); // Delay a little bit to improve simulation performance
    Keyboard.end();
    blink(0,0,100);
  } else {
    // turn LED off
    digitalWrite(13, LOW);
    writeEasyNeoPixel(0,0,0,0);
  }
  //delay(10); // Delay a little bit to improve simulation performance
}
void run()
{
  //Keyboard.println("Hello!");
  writeEasyNeoPixel(0,100,0,0);
  linux();
  delay(1000);
  Serial.println("done");
  writeEasyNeoPixel(0,0,0,0);
  
}
